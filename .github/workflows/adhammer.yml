name: Update AdHammer Ruleset

on:
  push:
    paths:
      - 'self-host/ad-whitelist.txt'
      - '.github/workflows/adhammer.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'
    
jobs:
  build-ruleset:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: pip install requests tqdm
        
    - name: Download and process hosts file
      run: |
        python - <<EOF
        import os
        import re
        import requests
        from tqdm import tqdm
        
        # 下载 hosts 文件
        url = "https://gitlab.com/jdlingyu/ext_rules/raw/main/hosts/hosts"
        print(f"下载 hosts 文件: {url}")
        response = requests.get(url, stream=True)
        total_size = int(response.headers.get('content-length', 0))
        
        # 保存原始文件
        os.makedirs('temp', exist_ok=True)
        with open('temp/original_hosts', 'wb') as f, tqdm(
            total=total_size, unit='B', unit_scale=True, desc="下载进度"
        ) as pbar:
            for data in response.iter_content(chunk_size=1024):
                f.write(data)
                pbar.update(len(data))
        
        # 处理 hosts 文件 - 保持原始顺序
        domains = []  # 使用列表保持顺序
        seen_domains = set()  # 用于检查重复项
        
        with open('temp/original_hosts', 'r', encoding='utf-8') as f:
            for line in f:
                # 移除注释和空行
                line = line.strip()
                if not line or line.startswith('#'):
                    continue
                
                # 提取域名
                parts = re.split(r'\s+', line)
                if len(parts) < 2:
                    continue
                
                # 只处理 0.0.0.0/127.0.0.1 开头的行
                if parts[0] in ['0.0.0.0', '127.0.0.1', '::']:
                    for domain in parts[1:]:
                        # 跳过注释和空值
                        if not domain or domain.startswith('#'):
                            break
                        
                        # 标准化域名并检查唯一性
                        domain = domain.lower().strip()
                        if domain and '.' in domain and domain not in seen_domains:
                            domains.append(domain)  # 按出现顺序添加
                            seen_domains.add(domain)  # 标记为已处理
        
        print(f"原始找到 {len(domains)} 个唯一域名 (保持原始顺序)")
        
        # 加载白名单（支持中文注释）
        whitelist = set()
        whitelist_file = 'self-host/ad-whitelist.txt'
        if os.path.exists(whitelist_file):
            print(f"加载白名单文件: {whitelist_file}")
            with open(whitelist_file, 'r', encoding='utf-8') as f:
                for line in f:
                    # 跳过注释行和空行
                    line = line.strip()
                    if not line or line.startswith('#'):
                        continue
                    
                    # 添加域名到白名单（转换为小写）
                    whitelist.add(line.lower())
        
        # 应用白名单过滤
        filtered_domains = [d for d in domains if d not in whitelist]
        removed_count = len(domains) - len(filtered_domains)
        
        print(f"应用白名单后: 保留 {len(filtered_domains)} 个域名, 排除 {removed_count} 个")
        
        # 保存为规则集文件
        os.makedirs('self-host', exist_ok=True)
        with open('self-host/ad-block.txt', 'w', encoding='utf-8') as f:
            f.write(f"# 域名总数: {len(filtered_domains)}\n")
            f.write(f"# 白名单排除: {removed_count} 个域名\n")
            f.write("# 域名按原始 hosts 文件出现顺序排列\n\n")
            for domain in filtered_domains:
                # 转换为 Adblock 格式
                f.write(f"domain_suffix,{domain}\n")  # 核心转换语句
        
        print("规则集文件已生成: self-host/ad-block.txt")
        EOF

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ad-block
        path: self-host/ad-block.txt
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add self-host/ad-block.txt
        git commit -m "自动更新规则集" || echo "没有变更，跳过提交"
        git push
